```json
[
  {
    "path": "src/pages/Rooms.vue",
    "content": "<template>\n  <div class=\"rooms-container\">\n    <van-list>\n      <van-cell\n        v-for=\"room in rooms\"\n        :key=\"room.id\"\n        :title=\"room.name\"\n        is-link\n        @click=\"goToRoomDetail(room.id)\"\n      />\n    </van-list>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { getRooms } from '@/api/rooms';\n\nconst rooms = ref([]);\nconst router = useRouter();\n\nconst fetchRooms = async () => {\n  try {\n    const response = await getRooms();\n    rooms.value = response.data;\n  } catch (error) {\n    console.error('Error fetching rooms:', error);\n  }\n};\n\nconst goToRoomDetail = (roomId: string) => {\n  router.push(`/rooms/${roomId}`);\n};\n\nonMounted(() => {\n  fetchRooms();\n});\n</script>\n\n<style scoped>\n.rooms-container {\n  padding: 16px;\n}\n</style>\n"
  },
  {
    "path": "src/pages/RoomDetail.vue",
    "content": "<template>\n  <div class=\"room-detail-container\">\n    <van-list>\n      <van-cell\n        v-for=\"device in devices\"\n        :key=\"device.id\"\n        :title=\"device.name\"\n        :label=\"device.model\"\n        is-link\n        @click=\"goToDeviceDetail(device.id)\"\n      >\n        <template #right-icon>\n          <van-tag :type=\"device.healthStatus === 'healthy' ? 'success' : 'danger'\">\n            {{ device.healthStatus }}\n          </van-tag>\n        </template>\n      </van-cell>\n    </van-list>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { getRoomDevices } from '@/api/rooms';\n\nconst route = useRoute();\nconst router = useRouter();\nconst devices = ref([]);\n\nconst fetchRoomDevices = async () => {\n  try {\n    const roomId = route.params.roomId as string;\n    const response = await getRoomDevices(roomId);\n    devices.value = response.data;\n  } catch (error) {\n    console.error('Error fetching room devices:', error);\n  }\n};\n\nconst goToDeviceDetail = (deviceId: string) => {\n  router.push(`/devices/${deviceId}`);\n};\n\nonMounted(() => {\n  fetchRoomDevices();\n});\n</script>\n\n<style scoped>\n.room-detail-container {\n  padding: 16px;\n}\n</style>\n"
  },
  {
    "path": "src/pages/DeviceDetail.vue",
    "content": "<template>\n  <div class=\"device-detail-container\">\n    <van-cell-group>\n      <van-cell title=\"设备名称\" :value=\"device.name\" />\n      <van-cell title=\"种类\" :value=\"device.type\" />\n      <van-cell title=\"健康状态\" :value=\"device.healthStatus\" />\n      <van-cell title=\"设备型号\" :value=\"device.model\" />\n      <van-cell title=\"开机时长\" :value=\"device.uptime\" />\n      <van-cell title=\"CPU占用百分比\" :value=\"device.cpuUsage\" />\n      <van-cell title=\"内存占用百分比\" :value=\"device.memoryUsage\" />\n    </van-cell-group>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getDeviceDetail } from '@/api/devices';\n\nconst route = useRoute();\nconst device = ref({});\n\nconst fetchDeviceDetail = async () => {\n  try {\n    const deviceId = route.params.deviceId as string;\n    const response = await getDeviceDetail(deviceId);\n    device.value = response.data;\n  } catch (error) {\n    console.error('Error fetching device detail:', error);\n  }\n};\n\nonMounted(() => {\n  fetchDeviceDetail();\n});\n</script>\n\n<style scoped>\n.device-detail-container {\n  padding: 16px;\n}\n</style>\n"
  },
  {
    "path": "src/pages/DeviceException.vue",
    "content": "<template>\n  <div class=\"device-exception-container\">\n    <van-cell-group>\n      <van-cell title=\"设备名称\" :value=\"device.name\" />\n      <van-cell title=\"种类\" :value=\"device.type\" />\n      <van-cell title=\"健康状态\" :value=\"device.healthStatus\" />\n      <van-cell title=\"设备型号\" :value=\"device.model\" />\n      <van-cell title=\"开机时长\" :value=\"device.uptime\" />\n      <van-cell title=\"CPU占用百分比\" :value=\"device.cpuUsage\" />\n      <van-cell title=\"内存占用百分比\" :value=\"device.memoryUsage\" />\n    </van-cell-group>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport { getDeviceDetail } from '@/api/devices';\n\nconst route = useRoute();\nconst device = ref({});\n\nconst fetchDeviceDetail = async () => {\n  try {\n    const deviceId = route.params.deviceId as string;\n    const response = await getDeviceDetail(deviceId);\n    device.value = response.data;\n  } catch (error) {\n    console.error('Error fetching device detail:', error);\n  }\n};\n\nonMounted(() => {\n  fetchDeviceDetail();\n});\n</script>\n\n<style scoped>\n.device-exception-container {\n  padding: 16px;\n}\n</style>\n"
  }
]
```